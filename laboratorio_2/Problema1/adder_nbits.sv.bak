module adder_nbits

#( parameter N = 2 ) 

(
	input logic [N-1:0] a,        
	input logic [N-1:0] b,
	output logic [N-1:0] result,
	output logic c_out
	output logic neg_flag
	output logic zr_flag
	output logic cry_flag
	output logic of_flag
);

	input logic a,        
	input logic b,  
	input logic c_in,	
	output logic result,
	output logic c_out
	
	wire [N-1:0] carries
	
	genvar i;
	
	generate 
		for(i=0;i<N;i=i+1)
		  begin: 
			if(i==0) 
				full_adder f(a[0],b[0],0,result[0],carries[0]);
			else
				full_adder f(a[i],b[i],carries[i-1],result[i],carries[i]);
		  end
		  
	assign cry_flag = carries[N-1];
	
	endgenerate

	
endmodule